Setting up and using Express.js with middleware involves several steps, from installation to creating a project structure, defining routes, using middleware functions, to finally running the server. Here's a step-by-step guide:

### Step 1: Install Express.js
If you haven't already, you need to install Express.js. You can do this via npm, Node.js's package manager:

```bash
npm install express
```

### Step 2: Create an Express Project
Create a new directory for your Express project:

```bash
mkdir my_express_app
cd my_express_app
```

### Step 3: Initialize a New Node.js Project
Initialize a new Node.js project using npm:

```bash
npm init -y
```

This will create a `package.json` file in your project directory.

### Step 4: Create Your Express Application
Create a JavaScript file, typically named `app.js`, to define your Express application:

```javascript
const express = require('express');
const app = express();
const port = 3000;

// Middleware function
app.use((req, res, next) => {
  console.log('Time:', Date.now());
  next();
});

// Routes
app.get('/', (req, res) => {
  res.send('Hello, World!');
});

app.listen(port, () => {
  console.log(`App listening at http://localhost:${port}`);
});
```

### Step 5: Define Routes
Define routes within your `app.js` file. Routes map URL paths to request handlers, which generate HTTP responses.

### Step 6: Use Middleware
Middleware functions are functions that have access to the request object (req), the response object (res), and the next middleware function in the applicationâ€™s request-response cycle. They can modify the request and response objects, end the request-response cycle, or call the next middleware function in the stack. You can use them with `app.use()`.

### Step 7: Run the Server
Start the Express server:

```bash
node app.js
```

### Step 8: Test Your App
Visit `http://localhost:3000/` in your web browser to test your Express app.

### Step 9: Build Your App
Continue building your app by adding more routes, middleware functions, and functionality as needed.

### Step 10: Deploy Your App (Optional)
When your app is ready, deploy it to a production server following Express deployment best practices.

That's a basic overview of setting up and using Express.js with middleware. Each step can be customized and expanded based on your specific requirements.